name: 'Terraform'

on:
  push:
    branches:
      - master

jobs:
  terraform-job:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        cd terraform && terraform init

    - name: Terraform validation
      run: |
        cd terraform && terraform validate

    - name: Tarrform plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
         cd terraform && terraform plan

    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        cd terraform && terraform apply -auto-approve -input=false

    - name: Upload and Bild artifact
      uses: actions/upload-artifact@v3
      with:
        name: inventory
        path: ./ansible/
        retention-days: 1
  
  ansible-job:
    name: ansible playbok
    runs-on: ubuntu-latest
    needs: terraform-job
    steps:
    - name: Checkout
      uses: actions/download-artifact@v3

    - name: Run ansible Playbook
      run: |
        cd ./inventory
        echo "inventory"
        ls -la
        chmod 400 ./python.pem
        export ANSIBLE_HOST_KEY_CHECKING=False
        sleep 7s
        ansible-playbook -i inventory.yml instance.yml
  
  # deploy:
  #   name: deploy
  #   runs-on: ubuntu-latest
  #   needs: [terraform-job, ansible-job ]

  #   - name: checkout
  #     uses: actions/download-artifact@v3

  #   - name: Deploy conteiner
  #     run: |
  #           cd ./inventory && export HOST=`cat host`
  #           ssh -i "python.pem" -o StrictHostKeyChecking=no ubuntu@$HOST " git clone https://github.com/RuslanSibgatulin/Webstore.git"
  #           ssh -i "python.pem" -o StrictHostKeyChecking=no ubuntu@$HOST "sudo apt-get install -y build-essential"
  #           # ssh -i "python.pem" -o StrictHostKeyChecking=no ubuntu@$HOST "cd Webstore && make init  && make loaddata"
